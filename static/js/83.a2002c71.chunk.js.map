{"version":3,"file":"static/js/83.a2002c71.chunk.js","mappings":"2PAgEA,EAzDqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,KAEVC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,UAEf,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KAYA,OAAOP,GACL,wCAEA,2BACGD,GAAQ,wBAAKA,IAAc,MAC5B,kBACES,UAAU,OACVC,aAAa,MACbC,SAAU,SAAAC,GACRA,EAAMC,iBAGNjB,GAASkB,EAAAA,EAAAA,IAAc,CAAEP,KAAAA,EAAMJ,MAAAA,EAAOE,SAAAA,IAGvC,EAVH,WAYE,mBAAOI,UAAU,QAAjB,WACE,eAAIA,UAAU,aAAd,uBACA,kBAAOM,KAAK,OAAOR,KAAK,OAAOS,SAtBlB,SAAAC,GACnBT,EAAQS,EAAIC,OAAOC,MACpB,QAsBK,mBAAOV,UAAU,QAAjB,WACE,eAAIA,UAAU,aAAd,oBACA,kBAAOM,KAAK,QAAQR,KAAK,QAAQS,SAjCnB,SAAAC,GACpBb,EAASa,EAAIC,OAAOC,MACrB,QAiCK,mBAAOV,UAAU,QAAjB,WACE,eAAIA,UAAU,aAAd,uBACA,kBAAOM,KAAK,WAAWR,KAAK,WAAWS,SAlCtB,SAAAC,GACvBX,EAAYW,EAAIC,OAAOC,MACxB,QAkCK,SAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYN,KAAK,SAAjC,2BAMP,C","sources":["pages/registration/Registration.jsx"],"sourcesContent":["import './Registration.css';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerThunk } from 'redux/usersThunks';\nimport { useUser } from 'redux/useSelectors';\n\nimport { Button } from '@mui/material';\nconst Registration = () => {\n  const dispatch = useDispatch();\n  const userState = useUser();\n\n  const { error, isLoading } = userState;\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n\n  const onChangeEmail = evt => {\n    setEmail(evt.target.value);\n  };\n  const onChangePassword = evt => {\n    setPassword(evt.target.value);\n  };\n\n  const onChangeName = evt => {\n    setName(evt.target.value);\n  };\n  return isLoading ? (\n    <h1>Loading...</h1>\n  ) : (\n    <div>\n      {error ? <h1>{error}</h1> : null}\n      <form\n        className=\"form\"\n        autoComplete=\"off\"\n        onSubmit={event => {\n          event.preventDefault();\n          // Validate name and number\n\n          dispatch(registerThunk({ name, email, password }));\n          // setEmail('');\n          // setPassword('');\n        }}\n      >\n        <label className=\"label\">\n          <h3 className=\"label-name\">Username</h3>\n          <input type=\"text\" name=\"name\" onChange={onChangeName} />\n        </label>\n        <label className=\"label\">\n          <h3 className=\"label-name\">Email</h3>\n          <input type=\"email\" name=\"email\" onChange={onChangeEmail} />\n        </label>\n        <label className=\"label\">\n          <h3 className=\"label-name\">Password</h3>\n          <input type=\"password\" name=\"password\" onChange={onChangePassword} />\n        </label>\n        <Button variant=\"contained\" type=\"submit\">\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Registration;\n"],"names":["dispatch","useDispatch","userState","useUser","error","isLoading","useState","email","setEmail","password","setPassword","name","setName","className","autoComplete","onSubmit","event","preventDefault","registerThunk","type","onChange","evt","target","value","Button","variant"],"sourceRoot":""}