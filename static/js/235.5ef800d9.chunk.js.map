{"version":3,"file":"static/js/235.5ef800d9.chunk.js","mappings":"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","sources":["components/NameInput.jsx","components/NumberInput.jsx","components/ContactForm.jsx","components/Filter.jsx","components/ContactItem.jsx","ContactPropType.js","components/Contactlist.jsx","components/Section.jsx","pages/contacts/Contacts.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport { TextField } from '@mui/material';\n\nconst NameInput = ({ title, onChange, value, pattern, required = false }) => {\n  console.log(value);\n  return (\n    <>\n      <h2 className=\"title\">{title}</h2>\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Name\"\n        variant=\"outlined\"\n        value={value}\n        type=\"text\"\n        name=\"name\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required={required}\n        onChange={onChange}\n        inputProps={{ pattern }}\n      />\n    </>\n  );\n};\nNameInput.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport default NameInput;\n","import PropTypes from 'prop-types';\n\nimport { TextField } from '@mui/material';\n\nconst NumberInput = ({ title, value, onChange, pattern, required = false }) => {\n  return (\n    <>\n      {/* <h2>{title}</h2> */}\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Number\"\n        variant=\"outlined\"\n        value={value}\n        type=\"tel\"\n        name=\"number\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required={required}\n        onChange={onChange}\n        inputProps={{ pattern }}\n      />\n    </>\n  );\n};\n\nNumberInput.propTypes = {\n  title: PropTypes.string.isRequired,\n  number: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport default NumberInput;\n","import NameInput from './NameInput';\nimport NumberInput from './NumberInput';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addContactThunk } from 'redux/contactsThunks';\nimport './App.css';\n\nimport { Button } from '@mui/material';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n\n  const [contactName, setContactName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onChangeName = evt => {\n    setContactName(evt.target.value);\n  };\n  const onChangePhone = evt => {\n    setNumber(evt.target.value);\n  };\n\n  return (\n    <form\n      className=\"phonebook-form\"\n      onSubmit={event => {\n        event.preventDefault();\n        // Validate name and number\n\n        dispatch(addContactThunk({ name: contactName, number }));\n        setContactName('');\n        setNumber('');\n      }}\n    >\n      <div className=\"wrapper-contact\">\n        <NameInput\n          title=\"Add your new contact\"\n          value={contactName}\n          onChange={onChangeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required={true}\n        ></NameInput>\n        <NumberInput\n          title=\"Number\"\n          value={number}\n          onChange={onChangePhone}\n          pattern=\"[0-9]{3}-?[0-9]{2}-?[0-9]{2}\"\n          required={true}\n        />\n      </div>\n      <Button variant=\"contained\" type=\"submit\" sx={{ mt: 2, mb: 2 }}>\n        Add Contact\n      </Button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func,\n};\nexport default ContactForm;\n","import NameInput from './NameInput';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contactsSlice';\nimport { useEffect } from 'react';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const onChangeHandler = evt => {\n    dispatch(setFilter({ filter: evt.target.value }));\n  };\n\n  useEffect(() => {\n    dispatch(setFilter({ filter: '' }));\n  }, [dispatch]);\n\n  return (\n    <NameInput\n      title=\"Find contacts by name\"\n      onChange={onChangeHandler}\n    ></NameInput>\n  );\n}\n\nFilter.propTypes = {\n  onDeleteContact: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { ContactPropType } from 'ContactPropType';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contactsThunks';\n\nimport { Button } from '@mui/material';\n\nconst ContactItem = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className=\"list-item\">\n      {name}: {number}\n      <Button\n        variant=\"outlined\"\n        size=\"small\"\n        type=\"button\"\n        sx={{ ml: 2 }}\n        onClick={() => dispatch(deleteContactThunk(id))}\n      >\n        Delete\n      </Button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: ContactPropType,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\n\nexport const ContactPropType = PropTypes.exact({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n}).isRequired;\n","import ContactItem from './ContactItem';\nimport PropTypes from 'prop-types';\nimport { ContactPropType } from 'ContactPropType';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContactsThunk } from 'redux/contactsThunks';\nimport { useContacts, useUser } from 'redux/useSelectors';\n\nconst isSubstringPresentInString = (string, substring) => {\n  return string.toLowerCase().includes(substring.toLowerCase());\n};\n\nconst ContactList = () => {\n  const contactsState = useContacts();\n  const { isLoggedIn } = useUser();\n  const contacts = contactsState.contacts;\n  const errorMessage = contactsState.error;\n  const isLoading = contactsState.isLoading;\n  const contactsFilter = contactsState.filter;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // Make request only if user is logged in\n    if (isLoggedIn) dispatch(fetchContactsThunk());\n  }, [dispatch, isLoggedIn]);\n\n  return contacts && !isLoading ? (\n    <ul className=\"list\">\n      {errorMessage}\n      {contacts\n        .filter(item => isSubstringPresentInString(item.name, contactsFilter))\n        .map(contactItem => (\n          <ContactItem contact={contactItem} key={contactItem.id}></ContactItem>\n        ))}\n    </ul>\n  ) : null;\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(ContactPropType),\n  filter: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport './App.css';\nconst Section = ({ title, childrenClassName, children }) => {\n  return (\n    <section>\n      <h1 className=\"main-title\">{title}</h1>\n      <div className={childrenClassName}>{children}</div>\n    </section>\n  );\n};\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  childrenClassName: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\nexport default Section;\n","import ContactForm from '../../components/ContactForm';\nimport Filter from '../../components/Filter';\nimport ContactList from '../../components/Contactlist';\nimport Section from '../../components/Section';\nimport { useSelector } from 'react-redux';\nimport '../../components/App.css';\n\nconst Contacts = () => {\n  const isLoading = useSelector(state => state.isLoading);\n\n  return (\n    <>\n      <Section title=\"Phonebook\" childrenClassName=\"phonebook\">\n        <ContactForm className=\"phonebook\" />\n      </Section>\n      <Section title=\"Contacts\" childrenClassName=\"contacts\">\n        {isLoading ? <h2>Loading...</h2> : null}\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["title","onChange","value","pattern","required","console","log","className","TextField","id","label","variant","type","name","inputProps","dispatch","useDispatch","useState","contactName","setContactName","number","setNumber","onSubmit","event","preventDefault","addContactThunk","evt","target","Button","sx","mt","mb","useEffect","setFilter","filter","PropTypes","isRequired","contact","size","ml","onClick","deleteContactThunk","contactsState","useContacts","isLoggedIn","useUser","contacts","errorMessage","error","isLoading","contactsFilter","fetchContactsThunk","item","string","substring","toLowerCase","includes","map","contactItem","childrenClassName","children","useSelector","state"],"sourceRoot":""}