{"version":3,"file":"static/js/974.1f381043.chunk.js","mappings":"sQAoEA,EA5Dc,WACZ,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,KAEVC,EAAkCF,EAAlCE,MAAOC,EAA2BH,EAA3BG,MAAOC,EAAoBJ,EAApBI,KAAMC,EAAcL,EAAdK,UAE5B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAeA,OANAC,EAAAA,EAAAA,YAAU,WACR,OAAO,kBAAMb,GAASc,EAAAA,EAAAA,MAAf,CACR,GAAE,CAACd,IAEJe,QAAQC,IAAId,GAELK,GACL,wCAEA,2BACGH,GAAQ,wBAAKA,IAAc,KAC3BE,GACC,0BACGA,EADH,KACWD,KAET,MACJ,kBACEY,UAAU,OACVC,aAAa,MACbC,SAAU,SAAAC,GACRA,EAAMC,iBAGNrB,GAASsB,EAAAA,EAAAA,IAAW,CAAEb,MAAAA,EAAOE,SAAAA,IAG9B,EAVH,WAYE,mBAAOM,UAAU,QAAjB,WACE,eAAIA,UAAU,aAAd,oBACA,kBAAOM,KAAK,QAAQjB,KAAK,QAAQkB,SArCnB,SAAAC,GACpBf,EAASe,EAAIC,OAAOC,MACrB,QAqCK,mBAAOV,UAAU,QAAjB,WACE,eAAIA,UAAU,aAAd,uBACA,kBAAOM,KAAK,WAAWjB,KAAK,WAAWkB,SAtCtB,SAAAC,GACvBb,EAAYa,EAAIC,OAAOC,MACxB,QAsCK,SAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYN,KAAK,SAAjC,yBAMP,C","sources":["pages/login/Login.jsx"],"sourcesContent":["import './Login.css';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from 'redux/usersThunks';\nimport { useUser } from 'redux/useSelectors';\nimport { Button } from '@mui/material';\nimport { cleanup } from 'redux/usersSlice';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const userState = useUser();\n\n  const { error, token, name, isLoading } = userState;\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onChangeEmail = evt => {\n    setEmail(evt.target.value);\n  };\n  const onChangePassword = evt => {\n    setPassword(evt.target.value);\n  };\n\n  useEffect(() => {\n    return () => dispatch(cleanup());\n  }, [dispatch]);\n\n  console.log(userState);\n\n  return isLoading ? (\n    <h1>Loading...</h1>\n  ) : (\n    <div>\n      {error ? <h1>{error}</h1> : null}\n      {name ? (\n        <h1>\n          {name}: {token}\n        </h1>\n      ) : null}\n      <form\n        className=\"form\"\n        autoComplete=\"off\"\n        onSubmit={event => {\n          event.preventDefault();\n          // Validate name and number\n\n          dispatch(loginThunk({ email, password }));\n          // setEmail('');\n          // setPassword('');\n        }}\n      >\n        <label className=\"label\">\n          <h3 className=\"label-name\">Email</h3>\n          <input type=\"email\" name=\"email\" onChange={onChangeEmail} />\n        </label>\n        <label className=\"label\">\n          <h3 className=\"label-name\">Password</h3>\n          <input type=\"password\" name=\"password\" onChange={onChangePassword} />\n        </label>\n        <Button variant=\"contained\" type=\"submit\">\n          Log In\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["dispatch","useDispatch","userState","useUser","error","token","name","isLoading","useState","email","setEmail","password","setPassword","useEffect","cleanup","console","log","className","autoComplete","onSubmit","event","preventDefault","loginThunk","type","onChange","evt","target","value","Button","variant"],"sourceRoot":""}